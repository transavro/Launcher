apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    signingConfigs {
        development_config {
            keyAlias 'devel'
            keyPassword 'cloudwalker'
            storeFile file('cloudwalker.jks')
            storePassword '2256081445'
        }
        production_config {
            keyAlias 'production'
            keyPassword 'cloudwalker'
            storeFile file('cloudwalker.jks')
            storePassword '2256081445'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "tv.cloudwalker.launcher"
        minSdkVersion 21
        buildConfigField "String", "SERVER_URL", '"https://tvapi.cloudwalker.tv/"'
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            buildConfigField "String", "SERVER_URL", '"https://tvapi.cloudwalker.tv/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            shrinkResources(true)
            signingConfig signingConfigs.production_config
            zipAlignEnabled true
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_URL", '"https://tvapi.cloudwalker.tv/"'
            debuggable true
//            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            ext.enableCrashlytics = false
            signingConfig signingConfigs.development_config
            zipAlignEnabled true
        }
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "Launcher"
            def SEP = "_"
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionCode
            def newApkName = project + SEP + buildType  + SEP + version + ".apk"
            output.outputFileName = new File("../$buildType", newApkName)
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/cvte-tv-api-1.10.32.jar')
    implementation files('libs/source.jar')
    implementation files('libs/TvApi.jar')

    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation 'org.greenrobot:eventbus:3.2.0'

    implementation ("com.github.bumptech.glide:glide:4.11.0") {
        exclude group: "com.android.support"
    }
    annotationProcessor 'androidx.annotation:annotation:1.1.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation ("com.github.bumptech.glide:glide:4.11.0@aar") {
        transitive = true
    }

    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    implementation 'com.google.firebase:firebase-analytics:17.5.0'

}
